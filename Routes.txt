/* Routes
------------------------------------------------------------ */
routes メソッドは、アプリケーションのエンドポイントを設定します。
Fastifyでルートを宣言するには、短縮法と完全な宣言の2つの方法があります。

Full declaration
fastify.route(options)

Routes options
method:
現在は、「DELETE」、「GET」、「HEAD」、「PATCH」、「POST」、「PUT」、「OPTIONS」をサポートしています。また、メソッドの配列にすることもできます。

url: 
このルートにマッチするURLのパス（別名：パス）。

schema:
リクエストとレスポンスのスキーマを含むオブジェクトです。JSONスキーマ形式である必要があります。
詳しくはこちらをご覧ください。

 body: 
 リクエストがPOST、PUT、PATCHのいずれかのメソッドである場合に、リクエストのボディを検証します。

 querystring or query: 
 クエリストリングの検証を行います。これは、完全なJSONスキーマ・オブジェクトで、
 プロパティ・タイプがオブジェクトで、プロパティ・オブジェクトがパラメータである場合もあれば、
 以下のようにプロパティ・オブジェクトに含まれる値だけの場合もあります。

 params: パラメターを検証します。

 response: 
 フィルタリングを行い、レスポンスのスキーマを生成します。スキーマを設定することで、10～20%のスループットを確保することができます。

exposeHeadRoute: 
すべての GET ルートに対して兄弟の HEAD ルートを作成します。
デフォルトでは、インスタンスオプション exposeHeadRoutes の値が設定されます。
このオプションを無効にせずにカスタムHEADハンドラーを使用したい場合は、必ずGETルートの前に定義してください。

attachValidation: 
スキーマ検証エラーが発生した場合、エラーハンドラーにエラーを送信するのではなく、リクエストにvalidationErrorをアタッチします。

onRequest(request, reply, done): 
リクエストを受け取るとすぐに関数を実行しますが、関数の配列にすることもできます。

